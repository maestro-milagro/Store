//Liskov substitution principle Наследники должны логически иметь возможность сыграть роль своих предков
//в моей реализации класс ProductStore имеет возможность сыграть роль предка так как он расширяет его возможности
//и что самое главное не противоречит логике программы.

//Open-closed principle программные сущности должны быть открыты для расширения, но закрыты для модификации
//в моей реализации если нам понадобится спроектировать например, магазин одежды нам не придется полностью переделывать
// логику в классе ProductStore, при помощи наследования мы просто переопределим заложенные в Store методы в новом классе.
public class Store {
    public void showAssortment(){}
    public void addProduct(String nameOfElement, double priseOfElement){}
}
